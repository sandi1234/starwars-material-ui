import Head from 'next/head'
import { useRouter } from 'next/router'
import { Grid } from '@mui/material'
import UniNameCard from '../../../components/UniNameCard'
import MoreLink from '../../../components/MorePageBtn'
import SideMenu from '../../../components/Menu/SideMenu'
import PageIndicator from '../../../components/PageIndicator'
import Pagination from '../../../components/Pagination'
import { multiData } from '../../../scripts/DummyData/multi'
import { globalStyle } from '../../../muiGlobalStyles/style'

export default function Index({ data, API_URL }) {
  // const router = useRouter()
  const classes = globalStyle()

  // console.log(multiData)

  return (
    <div>
      <Head>
        <title>Create Next App</title>
        <meta name='description' content='Generated by create next app' />
        <link rel='icon' href='/favicon.ico' />
      </Head>

      <div className={classes.root}>
        <Grid container className={classes.wrapper} spacing={0}>
          <Grid item lg={2} md={2} sm={2} xs={12}>
            <SideMenu />
          </Grid>
          <Grid item lg={10} md={10} sm={10} xs={12}>
            <Pagination
              spaceing='2px'
              next={data.next}
              pageNumber={data.count}
              previous={data.previous}
            />
            <div className={classes.uniNameCardWrapper}>
              <PageIndicator />

              <Grid container spacing={2}>
                {data.results.map((person) => (
                  <Grid key={person.name} item lg={6} md={6} sm={6} xs={12}>
                    <UniNameCard API_URL={API_URL} data={person} />
                  </Grid>
                ))}
              </Grid>
            </div>

            <Pagination
              spaceing='2px'
              next={data.next}
              pageNumber={data.count}
              previous={data.previous}
            />
          </Grid>
        </Grid>
      </div>
    </div>
  )
}

export async function getServerSideProps(context) {
  const { id } = context.query

  const { API_URL } = process.env

  const testo = context.params

  const res = await fetch(`${API_URL}/people/?page=${id}`)
  const data = await res.json()

  if (!data) {
    return {
      redirect: {
        destination: '/',
        permanent: false,
      },
    }
  }

  return {
    props: { data, API_URL, testo },
  }
}
